service: autostat-api

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'local'}
  region: us-east-1
  environment:
    NODE_ENV: ${self:provider.stage}
    DB_HOST: ${self:custom.environment.${self:provider.stage}.DB_HOST}
    DB_USER: ${self:custom.environment.${self:provider.stage}.DB_USER}
    DB_PASSWORD: ${self:custom.environment.${self:provider.stage}.DB_PASSWORD}
    DB_NAME: ${self:custom.environment.${self:provider.stage}.DB_NAME}
    DB_PORT: ${self:custom.environment.${self:provider.stage}.DB_PORT}
    JWT_SECRET: ${self:custom.environment.${self:provider.stage}.JWT_SECRET}
    FRONTEND_URL: ${self:custom.environment.${self:provider.stage}.FRONTEND_URL}

functions:
  api:
    handler: dist/lambda.handler
    events:
      - http:
          path: /health
          method: GET
          cors: true
      - http:
          path: /{proxy+}
          method: ANY
          cors: true
    timeout: 60
    memorySize: 1024

package:
  patterns:
    - '!**'
    - 'dist/**'

plugins:
  - serverless-plugin-typescript
  - serverless-offline

custom:
  environment:
    dev:
      DB_HOST: ${ssm:/artemis/dev/db/host}
      DB_USER: ${ssm:/artemis/dev/db/user}
      DB_PASSWORD: ${ssm:/artemis/dev/db/password}
      DB_NAME: ${ssm:/artemis/dev/db/name}
      DB_PORT: ${ssm:/artemis/dev/db/port}
      JWT_SECRET: ${ssm:/artemis/dev/jwt/secret}
      FRONTEND_URL: ${ssm:/artemis/dev/frontend/url}
    local:
      DB_HOST: localhost
      DB_USER: postgres
      DB_PASSWORD: artemis-password
      DB_NAME: autostat
      DB_PORT: 5432
      JWT_SECRET: just-for-dev
      FRONTEND_URL: http://localhost:5173
  serverless-offline:
    httpPort: 3000
    host: localhost
    noPrependStageInUrl: true
    allowCache: false
    keepAlive: true
    lambdaTimeout: 60
  httpApi:
    cors:
      allowedOrigins:
        - http://localhost:5173
      allowedHeaders:
        - Content-Type
        - Authorization
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
  serverlessPluginTypescript:
    tsConfigFileLocation: './tsconfig.json' 
